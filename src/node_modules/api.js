const base = 'https://js.kristjankivikangur21.thkit.ee/';

// Funktsioon, mis saadab HTTP päringuid
async function send({ method, path, data, token }) {
    // Kasutatakse fetch'i erinevates keskkondades
    const fetch = process.browser ? window.fetch : require('node-fetch').default;

    const opts = { method, headers: {} };

    // Kui andmed on olemas, lisame sisu tüübi ja keha
    if (data) {
        opts.headers['Content-Type'] = 'application/json';
        opts.body = JSON.stringify(data);
    }

    // Kui token on olemas, lisame selle autoriseerimise päisesse
    if (token) {
        opts.headers['Authorization'] = `Bearer ${token}`;
    }

    // Logib URL ja valikud
    console.log(`${base}/${path}`);
    console.log(opts);

    // Saadab päringu ja töötleb vastuse
    return fetch(`${base}/${path}`, opts)
        .then((r) => r.text())
        .then((json) => {
            try {
                // Proovib vastuse JSON'iks konverteerida
                return JSON.parse(json);
            } catch (err) {
                // Tagastab tavalise tekstivastuse, kui JSON konverteerimine ebaõnnestub
                return json;
            }
        });
}

// Funktsioon GET päringu saatmiseks
export function get(path, token) {
    return send({ method: 'GET', path, token });
}

// Funktsioon DELETE päringu saatmiseks
export function del(path, token) {
    return send({ method: 'DELETE', path, token });
}

// Funktsioon POST päringu saatmiseks
export function post(path, data, token) {
    return send({ method: 'POST', path, data, token });
}

// Funktsioon PUT päringu saatmiseks
export function put(path, data, token) {
    return send({ method: 'PUT', path, data, token });
}
